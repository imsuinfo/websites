<?php

/**
 * @file
 * Install hooks for API module.
 */

/**
 * Implements hook_schema().
 */
function api_schema() {
  $schema['api_branch'] = array(
    'fields' => array(
      'branch_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'branch_name' => array(
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'project' => array(
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'type' => array(
        'description' => 'Controls how this branch will be fetched and parsed.',
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'data' => array(
        'description' => 'Serialized type-specific data',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'status' => array(
        'description' => 'Should this branch be shown in the UI',
        'type' => 'int',
        'size' => 'tiny',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'project_title' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('branch_id'),
    'unique keys' => array(
      'project_name' => array('project', 'branch_name'),
    ),
    'indexes' => array(
      'weight' => array('weight'),
      'branch_name' => array('branch_name'),
      'project_title' => array('project_title'),
      'status' => array('status'),
    ),
  );

  $schema['api_documentation'] = array(
    'fields' => array(
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'branch_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'object_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'member_name' => array(
        'description' => 'For class members, the name without Class::',
        'type' => 'varchar',
        'length' => 127,
        'not null' => TRUE,
        'default' => '',
      ),
      'object_type' => array(
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'title' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'file_name' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'summary' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'documentation' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'code' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'start_line' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'see' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'var' => array(
        'type' => 'varchar',
        'length' => 127,
        'not null' => TRUE,
      ),
      'throws' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'class_did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('did'),
    'indexes' => array(
      'object_name' => array('object_name', 'branch_id', 'object_type'),
      'object_type' => array('object_type'),
      'branch_id' => array('branch_id'),
      'title' => array('title'),
      'class_did' => array('class_did'),
      'file_name' => array('file_name'),
      'member_name' => array('member_name'),
    ),
  );

  $schema['api_php_documentation'] = array(
    'fields' => array(
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'branch_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'object_name' => array(
        'type' => 'varchar',
        'length' => '127',
        'not null' => TRUE,
        'default' => '',
      ),
      'member_name' => array(
        'description' => 'For class members, the name without Class::',
        'type' => 'varchar',
        'length' => 127,
        'not null' => TRUE,
        'default' => '',
      ),
      'object_type' => array(
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'documentation' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('did'),
    'indexes' => array(
      'object_name' => array('object_name', 'branch_id', 'object_type'),
      'object_type' => array('object_type'),
      'branch_id' => array('branch_id'),
      'member_name' => array('member_name'),
    ),
  );

  $schema['api_file'] = array(
    'fields' => array(
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'modified' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'queued' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'basename' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('did'),
    'indexes' => array(
      'basename' => array('basename'),
    ),
  );

  $schema['api_function'] = array(
    'fields' => array(
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'signature' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'parameters' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'return_value' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('did'),
  );

  $schema['api_reference_storage'] = array(
    'documentation' => 'Keep track of references.',
    'fields' => array(
      'object_name' => array(
        'type' => 'varchar',
        'mysql_type' => 'varbinary(127)',
        'length' => '127',
      ),
      'branch_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'object_type' => array(
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'from_did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'from_did' => array('from_did'),
      'object_name' => array('object_name'),
      'object_type' => array('object_type'),
      'branch_id' => array('branch_id'),
    ),
  );

  $schema['api_overrides'] = array(
    'description' => 'Keep track of method, property, and class constant parents.',
    'fields' => array(
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'overrides_did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'documented_did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'did' => array('did'),
      'overrides_did' => array('overrides_did'),
    ),
  );

  $schema['api_members'] = array(
    'description' => 'Keep track of class members, including inherited members.',
    'fields' => array(
      'class_did' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'did' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'indexes' => array(
      'did' => array('did'),
      'class_did' => array('class_did'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_enable().
 */
function api_enable() {
  // Create the PHP branch if it doesn't already exist.
  $exists = FALSE;
  $result = db_select('api_branch', 'b')
    ->fields('b', array('branch_name'))
    ->condition('branch_name', 'php')
    ->range(0, 1)
    ->execute()
    ->fetchCol();

  if (count($result) < 1) {
    // Create new PHP branch.
    $branch = new stdClass();
    $branch->type = 'php';
    $branch->project = 'php';
    $branch->project_title = 'php';
    $branch->branch_name = 'php';
    $branch->title = 'PHP functions';
    $branch->status = 0;
    $branch->data = array(
      'summary' => 'http://svn.php.net/repository/phpdoc/doc-base/trunk/funcsummary.txt',
      'path' => 'http://php.net/!function',
    );
    api_save_branch($branch);
  }

  // Make sure that the comment body field exists for our fake node type.
  if (module_exists('comment')) {
    $info = (object) array('type' => 'api');
    _comment_body_field_create($info);
  }
}

/**
 * Implements hook_update_last_removed();
 */
function api_update_last_removed() {
  return 6116;
}

/**
 * Ensure that the comment body field exists.
 */
function api_update_7100() {
  $info = (object) array('type' => 'api');
  _comment_body_field_create($info);
}

/**
 * Add the {api_php_documentation} table to the database.
 */
function api_update_7101() {
  // Create new table.
  db_create_table('api_php_documentation', array(
    'fields' => array(
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'branch_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'object_name' => array(
        'type' => 'varchar',
        'length' => '127',
        'not null' => TRUE,
        'default' => '',
      ),
      'member_name' => array(
        'description' => 'For class members, the name without Class::',
        'type' => 'varchar',
        'length' => 127,
        'not null' => TRUE,
        'default' => '',
      ),
      'object_type' => array(
        'type' => 'varchar',
        'length' => '31',
        'not null' => TRUE,
        'default' => '',
      ),
      'documentation' => array(
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('did'),
    'indexes' => array(
      'object_name' => array('object_name', 'branch_id', 'object_type'),
      'object_type' => array('object_type'),
      'branch_id' => array('branch_id'),
      'member_name' => array('member_name'),
    ),
  ));

  // Populate from existing {api_documentation} records.
  $branches = db_select('api_branch', 'b')
    ->fields('b', array('branch_id'))
    ->condition('b.type', 'php')
    ->execute()
    ->fetchCol();
  $select = db_select('api_documentation', 'd')
    ->fields('d', array('did', 'branch_id', 'object_name', 'member_name', 'object_type', 'documentation'))
    ->condition('d.branch_id', $branches);
  db_insert('api_php_documentation')
    ->fields(array('did', 'branch_id', 'object_name', 'member_name', 'object_type', 'documentation'))
    ->from($select)
    ->execute();

  // Delete existing {api_documentation} records from PHP branches.
  db_delete('api_documentation')
    ->condition('branch_id', $branches)
    ->execute();

  return 'Created and populated api_php_documentation table.';
}

/**
 * Mark all files for reparse, due to some updates to the parsing code.
 */
function api_update_7102() {
  $count = api_mark_for_reparse();
  return format_string('@count files marked for reparse, starting at next cron run', array('@count' => $count));
}

/**
 * Change the data type for the object_name field in {api_reference_storage}.
 */
function api_update_7103() {
  // Update the field to the new definition.
  db_drop_index('api_reference_storage', 'object_name');
  db_change_field('api_reference_storage', 'object_name', 'object_name', array(
      'type' => 'varchar',
      'mysql_type' => 'varbinary(127)',
      'length' => '127',
    ),
    array('indexes' => array('object_name' => array('object_name'))));

  // Also reparse everything, because the old field definition left things
  // in a bad state.
  $count = api_mark_for_reparse();

  return 'object_name field updated in {api_reference_storage}, and everything marked for reparse.';
}

/**
 * Remove fields {api_reference_storage}.to_did and {api_overrides}.root_did.
 */
function api_update_7104() {
  db_drop_index('api_reference_storage', 'to_did');
  db_drop_field('api_reference_storage', 'to_did');

  db_drop_index('api_overrides', 'root_did');
  db_drop_field('api_overrides', 'root_did');

  return 'Fields {api_reference_storage}.to_did and {api_overrides}.root_did removed';
}

/**
 * Make two {api.documentation} fields longer.
 */
function api_update_7106() {
  db_drop_index('api_documentation', 'file_name');
  db_drop_index('api_documentation', 'object_name');
  db_change_field('api_documentation', 'file_name', 'file_name', array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => TRUE,
      'default' => '',
    ),
    array('indexes' => array('file_name' => array('file_name'))));
  db_change_field('api_documentation', 'object_name', 'object_name', array(
      'type' => 'varchar',
      'length' => '255',
      'not null' => TRUE,
      'default' => '',
    ),
    array('indexes' => array('object_name' => array('object_name', 'branch_id', 'object_type'))));

  return 'Two fields in {api_documentation} have been updated.';
}

/**
 * Remove variables on uninstall.
 */
function api_uninstall() {
  variable_del('api_default_branch');

  db_delete('node')
  ->condition('type', 'api')
  ->execute();
}
