.document {
  counter-reset: example_count 0 section 0;
}

.document > section {
  counter-increment: section;
  counter-reset: sub_section;
}

.document > section > section {
  counter-increment: sub_section;
  counter-reset: sub_sub_section;
}

.document > section > section > section {
  counter-increment: sub_sub_section;
}

.hlist {
  list-style: none;
}

h1.hlist.start,
h2.hlist.start,
h3.hlist.start,
h4.hlist.start,
h5.hlist.start,
h6.hlist.start {
  counter-reset: hlist_counter_2 0;
}

h1.hlist,
h2.hlist,
h3.hlist,
h4.hlist,
h5.hlist,
h6.hlist {
  counter-reset: hlist_counter_2 0;
  counter-increment: hlist_counter_1;
}

ol.hlist.start > li ol.hlist {
  counter-reset: hlist_counter_3 0;
}

ol.hlist.start > li ol.hlist > li ol.hlist {
  counter-reset: hlist_counter_4 0;
}

ol.hlist.start > li ol.hlist > li ol.hlist > li ol.hlist {
  counter-reset: hlist_counter_5 0;
}

ol.hlist.start > li ol.hlist > li ol.hlist > li ol.hlist > li ol.hlist {
  counter-reset: hlist_counter_6 0;
}

ol.hlist.start > li {
  counter-increment: hlist_counter_2;
}

ol.hlist.start > li ol.hlist > li {
  counter-increment: hlist_counter_3;
}

ol.hlist.start > li ol.hlist > li ol.hlist > li {
  counter-increment: hlist_counter_4;
}

ol.hlist.start > li ol.hlist > li ol.hlist > li ol.hlist > li {
  counter-increment: hlist_counter_5;
}

ol.hlist.start > li ol.hlist > li ol.hlist > li ol.hlist > li ol.hlist > li {
  counter-increment: hlist_counter_6;
}

h2.hlist.start:not(.silent):before {
  content: counter(hlist_counter_1) "." counter(hlist_counter_2) " ";
}

ol.hlist.start > li:not(.silent):before {
  content: counter(hlist_counter_1) "." counter(hlist_counter_2) " ";
}

ol.hlist.start > li ol.hlist:not(.start) > li:not(.silent):before {
  content: counter(hlist_counter_1) "." counter(hlist_counter_2) "." counter(hlist_counter_3) " ";
}

ol.hlist.start > li ol.hlist:not(.start) > li ol.hlist:not(.start) > li:not(.silent):before {
  content: counter(hlist_counter_1) "." counter(hlist_counter_2) "." counter(hlist_counter_3) "." counter(hlist_counter_4) " ";
}

ol.hlist.start > li ol.hlist:not(.start) > li ol.hlist:not(.start) > li ol.hlist:not(.start) > li:not(.silent):before {
  content: counter(hlist_counter_1) "." counter(hlist_counter_2) "." counter(hlist_counter_3) "." counter(hlist_counter_4) "." counter(hlist_counter_5) " ";
}

ol.hlist.start > li ol.hlist:not(.start) > li ol.hlist:not(.start) > li ol.hlist:not(.start) > li ol.hlist:not(.start) > li:not(.silent):before {
  content: counter(hlist_counter_1) "." counter(hlist_counter_2) "." counter(hlist_counter_3) "." counter(hlist_counter_4) "." counter(hlist_counter_5) "." counter(hlist_counter_6) " ";
}

.document a,
.document a:visited {
  color: #0000ff;
}

.document a:hover {
  color: #616e07;
}

.document a:active {
  color: #aa0000;
}

.document .reference,
.document figcaption {
  text-transform: small;
  font-family: monospace;
  font-weight: bolder;
}

.document.double_space,
.document .double_space {
  line-height: 2em;
}

.document figure > * {
  text-indent: 0;
}

.document figure > img {
  display: block;
}

.document dfn {
  color: #004274;
}

.document dt {
  font-weight: bolder;
}

.document .strong {
  font-weight: bolder;
}

.document .align_left {
  text-align: left;
}

.document .align_center {
  text-align: center;
}

.document .align_right {
  text-align: right;
}

.document ol.inline {
  counter-reset: ordered_list_count;
}

.document ol.inline > li:before {
  counter-increment: ordered_list_count;
  content: '(' counter(ordered_list_count) ') ';
}

.document ol.inline.colon > li:before {
  counter-increment: ordered_list_count;
  content: counter(ordered_list_count) ': ';
}

.document ul.inline > li:last-of-type:before,
.document ul.inline.and > li:last-of-type:before {
  content: 'and ';
}

.document ul.inline.or > li:last-of-type:before {
  content: 'or ';
}

.document ul.inline.and.or > li:last-of-type:before {
  content: 'and/or ';
}

.document ol.inline > li:last-of-type:before,
.document ol.inline.and > li:last-of-type:before {
  content: 'and (' counter(ordered_list_count) ') ';
}

.document ol.inline.or > li:last-of-type:before {
  content: 'or (' counter(ordered_list_count) ') ';
}

.document ol.inline.and.or > li:last-of-type:before {
  content: 'and/or (' counter(ordered_list_count) ') ';
}

.document ol.inline.colon > li:last-of-type:before,
.document ol.inline.colon.and > li:last-of-type:before {
  content: 'and ' counter(ordered_list_count) ': ';
}

.document ol.inline.colon.or > li:last-of-type:before {
  content: 'or ' counter(ordered_list_count) ': ';
}

.document ol.inline.colon.and.or > li:last-of-type:before {
  content: 'and/or ' counter(ordered_list_count) ': ';
}

.document ul.inline > li:after,
.document ol.inline > li:after {
  content: ',';
}

.document ul.inline > li:last-of-type:after,
.document ol.inline > li:last-of-type:after {
  content: '';
}

.document ul.inline.sentence > li:last-of-type:after,
.document ol.inline.sentence > li:last-of-type:after {
  content: '.';
}

.document ul.inline.exclamation > li:last-of-type:after,
.document ol.inline.exclamation > li:last-of-type:after {
  content: '!';
}

.document ul.inline.question > li:last-of-type:after,
.document ol.inline.question > li:last-of-type:after {
  content: '?';
}

.document ul.inline.sentence-semicolon > li:last-of-type:after,
.document ol.inline.sentence-semicolon > li:last-of-type:after {
  content: ';';
}

.document .image {
  background-color: #f0f0f0;
}

.document .for_example:before {
  background-color: #00477f;
  color: #ffffff;

  counter-increment: example_count;
  content: 'Example ' counter(example_count);

  font-weight: bold;
  font-family: monospace;

  line-height: 1em;
  letter-spacing: 2px;
}

.document .for_example {
  position: relative;

  background-color: #e3ea9a;
}
